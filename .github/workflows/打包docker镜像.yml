name: 打包docker镜像

on:
  workflow_dispatch:
    inputs:
      tag:
        description: '请填写打包镜像的版本号，在vnt-dev/vnt的Releases页面查看已发布的版本号'
        required: true
        default: ''
      latest:
        description: '是否打包成最新latest镜像'
        required: true
        default: true
        type: boolean
      rel:
        description: '是否发布离线镜像包'
        required: true
        default: true
        type: boolean

env:
  tags: "${{ github.event.inputs.tag }}"

permissions:
  contents: write
  packages: write  # 允许写入 GitHub Container Registry (GHCR)
jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - name: 下载二进制文件
        run: |
          mkdir -p /opt/vnt
          cd /opt/vnt
          wget -c https://github.com/vnt-dev/vnt/releases/download/${{ env.tags }}/vnt-x86_64-unknown-linux-musl-${{ env.tags }}.tar.gz -P /opt/
          tar zxf /opt/vnt-x86_64-unknown-linux-musl-${{ env.tags }}.tar.gz -C /opt/vnt/
          chmod a+x vnt-cli vn-link-cli
          mv vnt-cli vnt-cli_amd64
          mv vn-link-cli vn-link-cli_amd64

          wget -c https://github.com/vnt-dev/vnt/releases/download/${{ env.tags }}/vnt-i686-unknown-linux-musl-${{ env.tags }}.tar.gz -P /opt/
          tar zxf /opt/vnt-i686-unknown-linux-musl-${{ env.tags }}.tar.gz -C /opt/vnt/
          chmod a+x vnt-cli vn-link-cli
          mv vnt-cli vnt-cli_386
          mv vn-link-cli vn-link-cli_386

          wget -c https://github.com/vnt-dev/vnt/releases/download/${{ env.tags }}/vnt-aarch64-unknown-linux-musl-${{ env.tags }}.tar.gz -P /opt/
          tar zxf /opt/vnt-aarch64-unknown-linux-musl-${{ env.tags }}.tar.gz -C /opt/vnt/
          chmod a+x vnt-cli vn-link-cli
          mv vnt-cli vnt-cli_arm64
          mv vn-link-cli vn-link-cli_arm64
          
          wget -c https://github.com/vnt-dev/vnt/releases/download/${{ env.tags }}/vnt-armv7-unknown-linux-musleabihf-${{ env.tags }}.tar.gz -P /opt/
          tar zxf /opt/vnt-armv7-unknown-linux-musleabihf-${{ env.tags }}.tar.gz -C /opt/vnt/
          chmod a+x vnt-cli vn-link-cli
          mv vnt-cli vnt-cli_armv7
          mv vn-link-cli vn-link-cli_armv7

          wget -c https://github.com/vnt-dev/vnt/releases/download/${{ env.tags }}/vnt-arm-unknown-linux-musleabihf-${{ env.tags }}.tar.gz -P /opt/
          tar zxf /opt/vnt-arm-unknown-linux-musleabihf-${{ env.tags }}.tar.gz -C /opt/vnt/
          chmod a+x vnt-cli vn-link-cli
          mv vnt-cli vnt-cli_armv6
          mv vn-link-cli vn-link-cli_armv6
          
      - name: Setup QEMU
        uses: dbhi/qus/action@main
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
         username: lmq8267
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: login github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 构建发布
        run: |
         git clone https://github.com/lmq8267/vnt /opt/src
         mv /opt/src/Dockerfile /opt/vnt/Dockerfile
      - name: Build and Push Docker Latest Image
        if: github.event.inputs.latest == 'true'
        uses: docker/build-push-action@v5
        with:
         push: true
         tags: |
          docker.io/lmq8267/vnt:${{ env.tags }}
          docker.io/lmq8267/vnt:latest
          ghcr.io/${{ github.actor }}/vnt:${{ env.tags }}
          ghcr.io/${{ github.actor }}/vnt:latest
         platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
         context: /opt/vnt
      - name: Build and Push Docker Image
        if: github.event.inputs.latest == 'false'
        uses: docker/build-push-action@v5
        with:
         push: true
         tags: |
          docker.io/lmq8267/vnt:${{ env.tags }}
          ghcr.io/${{ github.actor }}/vnt:${{ env.tags }}
         platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
         context: /opt/vnt
      - name: Save Docker Image
        if: github.event.inputs.rel == 'true'
        run: |
          mkdir -p /opt/dk
          docker pull --platform linux/amd64 lmq8267/vnt:${{ env.tags }}
          docker save -o /opt/dk/vnt-cli-x86_64-docker.tar lmq8267/vnt:${{ env.tags }}

          docker pull --platform linux/386 lmq8267/vnt:${{ env.tags }}
          docker save -o /opt/dk/vnt-cli-386-docker.tar lmq8267/vnt:${{ env.tags }}

          docker pull --platform linux/arm64 lmq8267/vnt:${{ env.tags }}
          docker save -o /opt/dk/vnt-cli-arm64-docker.tar lmq8267/vnt:${{ env.tags }}

          docker pull --platform linux/arm/v7 lmq8267/vnt:${{ env.tags }}
          docker save -o /opt/dk/vnt-cli-armv7-docker.tar lmq8267/vnt:${{ env.tags }}

          docker pull --platform linux/arm/v6 lmq8267/vnt:${{ env.tags }}
          docker save -o /opt/dk/vnt-cli-armv5-docker.tar lmq8267/vnt:${{ env.tags }}
          echo "build_time=$(TZ=UTC-8 date '+%Y年%m月%d日%H:%M:%S' | jq -sRr @uri)" >> $GITHUB_ENV
      - name: 发布
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
           > ![](https://img.shields.io/badge/%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4-${{ env.build_time }}-8267?logo=github&labelColor=%E9%A1%BB)![](https://img.shields.io/github/downloads/${{ github.repository }}/${{ env.tags }}/total?label=%E4%B8%8B%E8%BD%BD%E6%AC%A1%E6%95%B0&logo=github)![](https://img.shields.io/docker/image-size/lmq8267/vnt/${{ env.tags }}?label=%E9%95%9C%E5%83%8F%E5%A4%A7%E5%B0%8F&link=https%3A%2F%2Fhub.docker.com%2Fr%2Flmq8267%2Fvnt&logo=docker)
           
           这是各平台的压缩版程序
           
           -musleabi：只支持软件浮点的设备
           -musleabihf：支持硬件浮点的设备
           -docker.tar  离线docker镜像包(通过设置环境变量APP=vn-link-cli 来启动vn-link-cli)
           
           [官方更新说明](https://github.com/vnt-dev/vnt/releases)
           
          tag_name: ${{ env.tags }}
          files: /opt/dk/*
          
